START -> BLOCK ~ 1.0;

BLOCK -> STATEMENT NEWLINE BLOCK ~ 20 | 
	 STATEMENT NEWLINE STACK ~ 1;

STATEMENT -> ARITHMETIC_STATEMENT ~ 1 |
	     ARRAY_STATEMENT ~ 1 |
	     DICT_STATEMENT ~ 1 |
	     STACK_STATEMENT ~ 0.5 |
	     COUNT ~ 0.25 |
	     MARK ~ 0.25 |
	     CLEARTOMARK ~ 0.25 |
	     CLEAR ~ 0.25 |
	     SHOWPAGE ~ 0.1 |
	     STROKE ~ 0.1 |
	     INTEGER INTEGER MOVETO STRING SHOW ~ 0.1 |
	     EQUALS ~ 0.1 |
	     SAVE ~ 0.1 |
	     RESTORE ~ 0.1 |
	     BIND ~ 0.1 |
	     NULL ~ 0.1 |
	     GSAVE ~ 0.1 |
	     GRESTORE ~ 0.1;

ARITHMETIC_STATEMENT -> NUMBER NUMBER ADDITION ~ 20 |
		     NUMBER NUMBER SUBTRACTION ~ 20 |
		     NUMBER NUMBER DIVISION ~ 20 |
		     NUMBER NUMBER MULTIPLICATION ~ 20 |
		     NUMBER SQRT ~ 20 |
		     NUMBER NUMBER EXP ~ 20 |
		     NUMBER LOG ~ 20;

STACK_STATEMENT -> INTEGER COPY ~ 20 |
		     INTEGER INDEX ~ 20 |
		     INTEGER INTEGER ROLL ~ 20;
	     
ARRAY_STATEMENT -> ARRAY_DECL LENGTH ~ 1 |
		   ARRAY_DECL ALOAD ~ 1 |
		   ARRAY_DECL ZERO INTEGER GETINTERVAL ~ 1 |
		   ARRAY_DECL INTEGER GET ~ 1 |
		   ARRAY_DECL ZERO NUMBER PUT ~ 1 |
		   ARRAY_DECL ZERO LB ELEMS RB PUTINTERVAL ~1 | 
		   INTEGER INT_ARRAY_DECL LBRK OPERATION RBRK FORALL ~ 1; 

DICT_STATEMENT -> DICT_DECL LENGTH ~ 1;

DICT_DECL -> DICT_LEFT KEY_VAL_PAIRS DICT_RIGHT ~ 8 |
	     INTEGER DICT ~ 1;

INT_ARRAY_DECL -> LB INT_ELEMS RB ~ 1;

ARRAY_DECL -> LB ELEMS RB ~ 8 |
	      INTEGER ARRAY ~ 1;

KEY_VAL_PAIRS -> KEY_VAL_PAIR KEY_VAL_PAIRS ~ 8 |
	         KEY_VAL_PAIR ~ 1;

KEY_VAL_PAIR -> STRING NUMBER ~ 1;

ELEMS -> STRING ELEMS ~ 3 | 
	NUMBER ELEMS ~ 3 | 
	STRING ~ 1 | 
	NUMBER ~ 1;

INT_ELEMS -> NUMBER INT_ELEMS ~ 3 |
	    NUMBER ~ 1;

OPERATION -> ADDITION ~ 1 | 
             DIVISION ~ 1 | 
             EXP ~ 1 | 
             MULTIPLICATION ~ 1 | 
             SQRT ~ 1 | 
             SUBTRACTION ~ 1; 

NUMBER -> INTEGER ~ 1 |
	  REAL ~ 1;

----------
ZERO -> 0;
ONE -> 1;
TWO -> 2;
THREE -> 3;
FOUR -> 4;
FIVE -> 5;
SIX -> 6;
SEVEN -> 7;
EIGHT -> 8;
NINE -> 9;
THOUSAND -> 1000;
STACK -> stack;
INTEGER -> ~int~;
REAL -> ~real~;
NEWLINE -> ~newline~;
MULTIPLICATION -> mul;
ADDITION -> add;
COPY -> copy;
DIVISION -> div;
EXP -> exp;
INDEX -> index;
LOG -> log;
MARK -> mark;
ROLL -> roll;
SQRT -> sqrt;
STRING -> ~string~;
SUBTRACTION -> sub;
LB -> [;
RB -> ];
LP -> (;
RP -> );
LENGTH -> length;
ALOAD -> aload;
GET -> get;
COUNT -> count;
GETINTERVAL -> getinterval;
ARRAY -> array;
PUT -> put;
PUTINTERVAL -> putinterval;
DICT_LEFT -> <<;
DICT_RIGHT -> >>;
DICT -> dict;
ASTORE -> astore;
FORALL -> forall;
LBRK -> {;
RBRK -> };
CLEARTOMARK -> cleartomark;
CLEAR -> clear;
SHOWPAGE -> showpage;
STROKE -> stroke;
MOVETO -> moveto;
SHOW -> show;
EQUALS -> =;
SAVE -> save;
RESTORE -> restore;
BIND -> bind;
NULL -> null;
GSAVE -> gsave;
GRESTORE -> grestore;
